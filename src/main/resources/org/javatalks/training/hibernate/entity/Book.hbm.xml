<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="org.javatalks.training.hibernate.entity">
  <class name="Book" table="book">
    <id name="id">
      <!--Asks database to generate the ID according to THIS database' default strategy. It might be
      IdentityGenerator (MySQL), SequenceGenerator (Oracle, Postgres), TableHiLoGenerator (Derby).
      What's common between all the cases - numbers (long, int, short) are used for ID.
      See org.hibernate.id.factory.internal#getIdentifierGeneratorClass() for the logic of choosing the underlying
      strategy.-->
      <generator class="native"/>
    </id>
    <property name="title"/>
    <many-to-one name="author" class="User" column="author_id"/>
    <component name="cover" class="BookCover">
      <property name="color"/>
      <property name="hard"/>
    </component>
    <list name="chapters" table="chapter" cascade="save-update">
      <key column="book_id" foreign-key="chapter_book_fk"/>
      <index column="order_in_book"/>
      <composite-element class="Chapter">
        <property name="name" column="name"/>
      </composite-element>
    </list>
  </class>
</hibernate-mapping>