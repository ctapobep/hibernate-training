<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="org.javatalks.training.hibernate.entity">
  <class name="User" table="users">
    <id name="id">
      <generator class="foreign">
        <param name="property">accessCard</param>
      </generator>
    </id>
    <property name="username"/>
    <one-to-one name="accessCard" cascade="all" constrained="true" foreign-key="user_card_fk"/>
    <many-to-one name="discountCard" cascade="all" column="discount_card_id" foreign-key="user_discount_card_fk"
                 unique="true" unique-key="discount_id_uk"/>
    <many-to-one name="passport" cascade="all" column="passport_id" foreign-key="user_passport_fk"
                 unique-key="passport_id_uk" unique="true"/>
    <one-to-one name="account" cascade="all"/>
    <many-to-one name="rentedPc" column="rented_pc_id" foreign-key="user_rented_pc_fk"
                 unique="true" unique-key="user_rented_pc_id_uk"/>
    <set name="booksByOrm" inverse="false" cascade="save-update">
      <key column="author_id" foreign-key="book_author_fk"/>
      <one-to-many class="Book"/>
    </set>
    <!--optional means that row should be inserted if both sides are not nulls-->
    <join table="user_reserved_desk" optional="true">
      <key column="user_id" unique="true" foreign-key="reserved_desk_user_fk" />
      <many-to-one name="reservedDesk" column="reserved_desk_id" unique="true" unique-key="user_reserved_desk_id_uk"
                   cascade="save-update"/>
    </join>
  </class>

  <class name="AccessCard" table="access_card">
    <id name="id">
      <generator class="native"/>
    </id>
    <property name="code"/>
    <property name="type">
      <type name="org.hibernate.type.EnumType">
        <param name="enumClass">org.javatalks.training.hibernate.entity.AccessCard$Type</param>
        <!-- 12 means 'VARCHAR', see java.sql.Types -->
        <param name="type">12</param>
        <param name="useNamed">true</param>
      </type>
    </property>
  </class>
  <class name="AccountForPaidUsers" table="user_account">
    <id name="id">
      <generator class="foreign">
        <param name="property">user</param>
      </generator>
    </id>
    <one-to-one name="user" constrained="true" foreign-key="account_user_fk"/>
    <property name="number"/>
    <property name="availableMoney" column="available_money"/>
  </class>
  <class name="DiscountCard" table="discount_card">
    <id name="id">
      <generator class="native"/>
    </id>
    <property name="expiry"/>
    <property name="number"/>
  </class>
  <class name="Passport" table="passport">
    <id name="id">
      <generator class="native"/>
    </id>
    <one-to-one name="user" class="User" property-ref="passport"/>
    <property name="issuer"/>
  </class>
  <class name="RentedPc" table="rented_pc">
    <id name="id">
      <generator class="native"/>
    </id>
    <many-to-one name="user" column="user_id" unique="true" unique-key="rented_pc_user_id_uk"
                 foreign-key="rented_pc_user_fk" cascade="save-update"/>
  </class>
  <class name="ReservedDesk" table="reserved_desk">
    <id name="id">
      <generator class="native"/>
    </id>
    <property name="number"/>
    <join table="user_reserved_desk" optional="true" inverse="true">
      <key column="reserved_desk_id" foreign-key="user_reserved_desk_to_desk_fk" />
      <many-to-one name="userReserved" column="user_id"/>
    </join>
  </class>
</hibernate-mapping>
